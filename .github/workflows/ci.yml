name: CI
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
    types: [synchronize, opened, reopened]

env:
  rust_miri_nightly: 'nightly-2025-06-15'
defaults:
  run:
    shell: bash

jobs:
  lint:
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-provider: warpbuild
      - run: cargo clippy --all-targets --all-features --no-deps

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: 'false'
      - run: cargo fmt --all --check

  doc:
    runs-on: warp-ubuntu-latest-x64-4x
    env:
      RUSTDOCFLAGS: '-Dwarnings'
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-provider: warpbuild
      - run: cargo doc --all-features --no-deps --document-private-items

  test:
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-provider: warpbuild
      - run: cargo test --all-features

  miri:
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - uses: actions/checkout@v5
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-provider: warpbuild
          toolchain: ${{ env.rust_miri_nightly }}
          components: miri,rust-src
      - name: Set up Miri and nightly
        run: |
          rustup override set ${{ env.rust_miri_nightly }}
          cargo miri setup --print-sysroot
      - uses: taiki-e/install-action@nextest
      - run: 'MIRIFLAGS="-Zmiri-tree-borrows -Zmiri-strict-provenance" cargo miri nextest run --features "test_helpers" unsize::'
        working-directory: star_frame
